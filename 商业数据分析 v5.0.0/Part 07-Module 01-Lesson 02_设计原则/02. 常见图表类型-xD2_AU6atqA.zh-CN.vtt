WEBVTT
Kind: captions
Language: zh-CN

00:00:00.100 --> 00:00:02.390
每种图表 对数据中的细微差异

00:00:02.390 --> 00:00:04.180
会有细微的优势

00:00:04.180 --> 00:00:08.250
事实上 你只需要少数图表就能够传递出想要传递的信息

00:00:08.250 --> 00:00:12.380
从一些基本的原则开始

00:00:12.380 --> 00:00:17.720
图表是与一组数据相对应的视觉编码

00:00:17.720 --> 00:00:21.200
并包含数据间的一些关系

00:00:21.200 --> 00:00:26.290
例如 一个散点图由 x 坐标和 y 坐标以及图形组成

00:00:26.290 --> 00:00:30.820
在这里 图形是圆圈 标识了两个连续变量

00:00:30.820 --> 00:00:34.810
连续性代表它们的数据类型 y 坐标值随

00:00:34.810 --> 00:00:39.250
x 坐标值变化 代表数据类型之间的关系

00:00:39.250 --> 00:00:41.930
将三个要素结合在一起

00:00:41.930 --> 00:00:44.190
就可以得到这样的散点图

00:00:44.190 --> 00:00:48.540
你可以想象一下 这样三个要素集的组合非常多

00:00:48.540 --> 00:00:52.420
一组可能的视觉编码集合 一组可能的数据类型集合

00:00:52.420 --> 00:00:55.400
以及那些数据类型之间的关系

00:00:55.400 --> 00:00:59.210
我认为这个流程图非常棒

00:00:59.210 --> 00:01:00.990
它根据使用方法对不同的图表进行分类

00:01:00.990 --> 00:01:03.520
但是 我想补充一些我认为缺少的东西

00:01:03.520 --> 00:01:07.690
我还有一些疑问是关于 Andrew 如何

00:01:07.690 --> 00:01:10.120
在给定情况下选择合适的图表

00:01:10.120 --> 00:01:14.110
在选择图表类型时 我通常要么从数据类型

00:01:14.110 --> 00:01:15.780
和维度着手 要么

00:01:15.780 --> 00:01:19.700
从我要表达的各种数据之间的关系着手

00:01:19.700 --> 00:01:24.110
例如 我会问自己 手上的数据有几个维度？

00:01:24.110 --> 00:01:27.190
一维、两维、还是三维

00:01:27.190 --> 00:01:28.570
每个数据是什么类型的？

00:01:28.570 --> 00:01:30.140
连续的 还是分类的

00:01:30.140 --> 00:01:32.110
需要比较两个变量吗？

00:01:32.110 --> 00:01:35.150
需要表现出某一个变量的分布吗？

00:01:35.150 --> 00:01:37.390
下面从最后一个问题开始

00:01:37.390 --> 00:01:39.370
假设我有一个一维数据

00:01:39.370 --> 00:01:41.480
并且想看这个数据的分布

00:01:41.480 --> 00:01:43.360
我会用一个表示连续数据的直方图

00:01:43.360 --> 00:01:46.450
并且对它进行分组

00:01:47.450 --> 00:01:51.660
如果 x 轴上是一些离散值 而且没有固有的顺序

00:01:51.660 --> 00:01:56.770
那么 我会用表示分类数据的柱形图

00:01:56.770 --> 00:02:01.740
如果想对它们的分布进行对比 我会使用箱线图或者

00:02:01.740 --> 00:02:03.520
小多组图

00:02:03.520 --> 00:02:07.250
因为小多组图可以并列展示

00:02:07.250 --> 00:02:09.310
多个变量的分布

00:02:09.310 --> 00:02:13.128
稍后我们将逐个观察每一种图表

00:02:13.128 --> 00:02:16.320
我将提及每种图表类型可以表现的

00:02:16.320 --> 00:02:20.440
数据类型和变量的分布情况

00:02:20.440 --> 00:02:24.800
要展示两个变量间的关系 其中 y 变量随 x 变量而变化

00:02:24.800 --> 00:02:29.260
那么散点图是最高效的方式

00:02:29.260 --> 00:02:30.300
也是最为人熟知的方式

00:02:31.550 --> 00:02:35.880
通过用视觉编码展示额外的维度 可以将散点图演变为泡式图

00:02:35.880 --> 00:02:40.410
在这种情况下 泡形图

00:02:40.410 --> 00:02:45.220
利用圆圈的大小来展示第三种变量

00:02:45.220 --> 00:02:49.590
散点图的微妙之处在于 x 轴的变量通常被假定为独立的

00:02:49.590 --> 00:02:54.270
而且与其他 x 值没有关联

00:02:54.270 --> 00:02:56.130
这到底意味着什么呢？

00:02:56.130 --> 00:02:57.650
想想时间序列数据

00:02:58.850 --> 00:03:04.140
根据时间处理时 每个数据点

00:03:04.140 --> 00:03:06.690
都与它之前的数据点暗含相关性

00:03:07.840 --> 00:03:09.250
在这种情况下

00:03:09.250 --> 00:03:11.550
我们用曲线图或者

00:03:11.550 --> 00:03:15.500
多重曲线图来展示时间序列数据

00:03:15.500 --> 00:03:17.640
一则它有固定次序

00:03:17.640 --> 00:03:21.460
二则数据点是依据它之前的时间点而定的

00:03:22.680 --> 00:03:26.540
曲线图是由每个点连接而成的

00:03:26.540 --> 00:03:29.040
展示数据趋势

00:03:29.040 --> 00:03:33.160
暗示每个数据点之间都有内在联系


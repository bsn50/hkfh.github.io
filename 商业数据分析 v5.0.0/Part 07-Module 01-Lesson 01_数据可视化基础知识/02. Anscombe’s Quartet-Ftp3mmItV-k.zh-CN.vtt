WEBVTT
Kind: captions
Language: zh-CN

00:00:00.595 --> 00:00:02.420
一定要将你的数据绘制成图表

00:00:02.420 --> 00:00:04.350
我们来看看示例 y

00:00:04.350 --> 00:00:08.300
这里有十一个数据点 根据这些数据 我做了右边的图表

00:00:08.300 --> 00:00:11.830
我们需要计算这个数据集的概括性统计量

00:00:11.830 --> 00:00:16.870
如均值、方差、相关系数和最优拟合线

00:00:16.870 --> 00:00:21.322
如果现在我再给出三个 有相同概括性统计量的数据集

00:00:21.322 --> 00:00:23.760
像这样

00:00:23.760 --> 00:00:26.747
因为这些数据集有相同的均值、

00:00:26.747 --> 00:00:28.918
方差、相关系数和最优拟合线

00:00:28.918 --> 00:00:32.439
所以你可能会预测 它们将有非常类似的可视化结果

00:00:32.439 --> 00:00:33.820
现在我们看一下

00:00:33.820 --> 00:00:35.630
这些数据集有多相似？

00:00:35.630 --> 00:00:36.240
并不相似

00:00:37.290 --> 00:00:39.510
我们看到曲线的走势和

00:00:39.510 --> 00:00:43.230
异常数值已经严重偏离我们的概括性统计量

00:00:43.230 --> 00:00:45.830
这个现象称为安斯库姆四重奏

00:00:45.830 --> 00:00:49.260
这也证明了绘制数据图表的重要性

00:00:49.260 --> 00:00:52.128
超过了仅依靠概括性统计

00:00:52.128 --> 00:00:56.560
Python 中的 matplotlib 和 R 中的 ggplot 等工具是

00:00:56.560 --> 00:01:00.580
绘制数据图表的不错的方法 让你在分析时可以发现数据图形的模式、趋势和

00:01:00.580 --> 00:01:02.450
异常数值

00:01:02.450 --> 00:01:05.950
希望这个示例让你明白数据可视化的力量

00:01:05.950 --> 00:01:07.190
以及为什么应该每天都使用它

